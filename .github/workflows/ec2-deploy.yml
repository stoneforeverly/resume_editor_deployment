name: EC2 Deploy

on:
  workflow_dispatch:
env:
  AWS_REGION: ap-southeast-2
  UPDATE_SCRIPT: .github/workflows/ec2_update.sh
  EC2_IP: 54.252.219.100
  SSH_USER: ec2-user

jobs:
  deploy:
    name: Deploy Docker Images to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup SSH Connection (Atomic Method)
      id: ssh-setup
      run: |
        # Install dependencies
        sudo apt-get update -y
        sudo apt-get install -y openssh-client git
        
        # Atomic key reconstruction
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # 使用多行EOF语法确保格式完整
        cat << 'EOF' > ~/.ssh/id_ed25519
        -----BEGIN OPENSSH PRIVATE KEY-----
        ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        -----END OPENSSH PRIVATE KEY-----
        EOF
        
        # 严格处理密钥文件
        sed -i '/^-----BEGIN OPENSSH PRIVATE KEY-----$/,/^-----END OPENSSH PRIVATE KEY-----$/!d' ~/.ssh/id_ed25519
        sed -i '/^$/d' ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # 二进制验证
        echo "=== Key Binary Verification ==="
        file ~/.ssh/id_ed25519
        head -c 100 ~/.ssh/id_ed25519 | xxd
        tail -c 100 ~/.ssh/id_ed25519 | xxd
        
        # 严格验证
        if ! ssh-keygen -lf ~/.ssh/id_ed25519; then
          echo "::error::Invalid SSH Key Format"
          exit 1
        fi
        
        # 配置SSH
        eval $(ssh-agent -s)
        if ! ssh-add ~/.ssh/id_ed25519; then
          echo "::error::Failed to add SSH key"
          ssh-add -vvv ~/.ssh/id_ed25519
          exit 1
        fi
        
        ssh-keyscan -H ${{ env.EC2_IP }} > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Deploy (With Fallback)
      if: steps.ssh-setup.outcome == 'success'
      run: |
        # 带重试机制的部署
        max_retries=3
        for i in $(seq 1 $max_retries); do
          scp -o StrictHostKeyChecking=no ${{ env.UPDATE_SCRIPT }} ${{ env.SSH_USER }}@${{ env.EC2_IP }}:~/ && break || {
            echo "Attempt $i failed, retrying..."
            sleep 5
            [ $i -eq $max_retries ] && exit 1
          }
        done
        
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.EC2_IP }} << 'DEPLOY_EOF'
          set -ex
          export OPENAI_API_KEY=$OPENAI_API_KEY
          chmod +x ~/ec2_update.sh
          
          # Docker权限处理
          if ! sudo docker info &>/dev/null; then
            sudo yum install -y docker || true
            sudo systemctl start docker
            sudo usermod -aG docker $USER
            # 临时权限修复
            sudo chmod 666 /var/run/docker.sock
          fi
          
          sudo ~/ec2_update.sh
        DEPLOY_EOF
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
