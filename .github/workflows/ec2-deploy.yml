name: EC2 Deploy

on:
  workflow_dispatch:
env:
  AWS_REGION: ap-southeast-2
  UPDATE_SCRIPT: .github/workflows/ec2_update.sh
  EC2_IP: 54.252.183.163
  SSH_USER: ec2-user

jobs:
  deploy:
    name: Deploy Docker Images to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup SSH Connection
      run: |
        # Install dependencies
        sudo apt-get update -y
        sudo apt-get install -y openssh-client git jq
        
        # Setup SSH directory
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Reconstruct key file with proper formatting
        KEY_CONTENT="${{ secrets.EC2_SSH_PRIVATE_KEY }}"
        echo "-----BEGIN OPENSSH PRIVATE KEY-----" > ~/.ssh/id_ed25519
        echo "$KEY_CONTENT" | jq -Rr 'gsub("\\\\t";"  ")' | sed -e '/^-----/d' -e '/^$/d' >> ~/.ssh/id_ed25519
        echo "-----END OPENSSH PRIVATE KEY-----" >> ~/.ssh/id_ed25519
        
        # Verify key reconstruction
        echo "=== Reconstructed Key ==="
        head -n 3 ~/.ssh/id_ed25519
        echo "..."
        tail -n 3 ~/.ssh/id_ed25519
        echo "======================="
        
        # Strict validation
        chmod 600 ~/.ssh/id_ed25519
        if ! ssh-keygen -l -f ~/.ssh/id_ed25519; then
          echo "=== Key Validation Failed ==="
          echo "Original content:"
          echo "$KEY_CONTENT" | head -n 5
          echo "..."
          echo "$KEY_CONTENT" | tail -n 5
          exit 1
        fi
        
        # Start SSH agent
        eval $(ssh-agent -s)
        if ! ssh-add ~/.ssh/id_ed25519; then
          echo "=== SSH-ADD Debug ==="
          ssh-keygen -lvf ~/.ssh/id_ed25519
          exit 1
        fi
        
        # Configure known hosts
        ssh-keyscan -H ${{ env.EC2_IP }} > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Verify Connection
      run: |
        ssh -T -o StrictHostKeyChecking=no -v ${{ env.SSH_USER }}@${{ env.EC2_IP }} << 'EOF'
          echo "SSH Connection Successful!"
          docker --version || echo "Docker not installed"
        EOF

    - name: Deploy Application
      run: |
        scp -o StrictHostKeyChecking=no ${{ env.UPDATE_SCRIPT }} ${{ env.SSH_USER }}@${{ env.EC2_IP }}:~/deploy.sh
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.EC2_IP }} << 'EOF'
          set -e
          chmod +x ~/deploy.sh
          sudo ~/deploy.sh
        EOF
