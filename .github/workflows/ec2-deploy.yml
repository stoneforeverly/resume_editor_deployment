name: EC2 Deploy

on:
  workflow_dispatch:
env:
  AWS_REGION: ap-southeast-2
  UPDATE_SCRIPT: .github/workflows/ec2_update.sh
  EC2_IP: 3.107.160.80
  SSH_USER: ec2-user

jobs:
  deploy:
    name: Deploy Docker Images to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup SSH Connection
      run: |
        # Install dependencies
        sudo apt-get update -y
        sudo apt-get install -y openssh-client git
        
        # Setup SSH directory
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Write private key with base64 decoding (recommended for GitHub Secrets)
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # Verify key format
        echo "=== Key Verification ==="
        ssh-keygen -l -f ~/.ssh/id_ed25519 || (echo "Key validation failed" && exit 1)
        echo "======================"
        
        # Start SSH agent
        eval $(ssh-agent -s)
        
        # Add key to agent with retry
        for i in {1..3}; do
          if ssh-add ~/.ssh/id_ed25519; then
            echo "Key added successfully"
            break
          else
            echo "Failed to add key (attempt $i/3)"
            if [ $i -eq 3 ]; then
              echo "=== Debug: Key Content ==="
              head -n 5 ~/.ssh/id_ed25519
              echo "..."
              tail -n 5 ~/.ssh/id_ed25519
              echo "========================"
              exit 1
            fi
            sleep 2
          fi
        done
        
        # Configure known hosts
        ssh-keyscan -H ${{ env.EC2_IP }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        # Test connection
        ssh -T -o StrictHostKeyChecking=no -v ${{ env.SSH_USER }}@${{ env.EC2_IP }} exit
        
        # Copy update script
        scp -o StrictHostKeyChecking=no ${{ env.UPDATE_SCRIPT }} ${{ env.SSH_USER }}@${{ env.EC2_IP }}:~/ 
        
        # Execute remote commands with proper Docker permissions
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.EC2_IP }} << 'EOF'
          # Install Docker if not exists
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            newgrp docker
          fi
          
          # Install AWS CLI if not exists
          if ! command -v aws &> /dev/null; then
            sudo yum install -y awscli
          fi
          
          # Execute update script with sudo
          export OPENAI_API_KEY=$OPENAI_API_KEY
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_REGION=$AWS_REGION
          chmod +x ~/ec2_update.sh
          sudo -E ~/ec2_update.sh
        EOF
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
