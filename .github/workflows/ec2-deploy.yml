name: EC2 Deploy

on:
  workflow_dispatch:
env:
  AWS_REGION: ap-southeast-2
  UPDATE_SCRIPT: .github/workflows/ec2_update.sh
  EC2_IP: 13.236.165.153
  SSH_USER: ec2-user  # 对于Ubuntu实例应改为'ubuntu'

jobs:
  deploy:
    name: Deploy Docker Images to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup SSH Connection
      id: ssh-setup
      run: |
        set -ex  # 启用详细日志和错误退出
        
        # 安装依赖
        sudo apt-get update -y
        sudo apt-get install -y openssh-client git jq curl
        
        # 创建SSH目录
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # 获取GitHub Actions runner的公共IP
        RUNNER_IP=$(curl -s https://api.ipify.org)
        echo "Runner Public IP: $RUNNER_IP"
        
        # 写入私钥（完整格式处理）
        cat <<EOF > ~/.ssh/id_ed25519
        ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        EOF
        
        # 清理密钥文件格式
        sed -i -e '/^$/d' -e 's/^[[:blank:]]*//' -e 's/[[:blank:]]*$//' ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # 验证密钥格式
        echo "-----BEGIN SSH私钥验证-----"
        ssh-keygen -l -f ~/.ssh/id_ed25519 || {
          echo "::error::SSH密钥格式验证失败"
          exit 1
        }
        
        # 配置SSH agent
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_ed25519 || {
          echo "::error::无法添加SSH密钥到agent"
          exit 1
        }
        
        # 配置known_hosts（增加超时和重试）
        ssh-keyscan -H -T 10 ${{ env.EC2_IP }} >> ~/.ssh/known_hosts 2>/dev/null || {
          echo "::warning::无法添加主机到known_hosts，将禁用严格检查"
          echo -e "Host ${{ env.EC2_IP }}\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null" > ~/.ssh/config
        }
        
        # 测试连接（增加详细日志）
        echo "-----测试SSH连接-----"
        ssh -vvv -o ConnectTimeout=15 -T ${{ env.SSH_USER }}@${{ env.EC2_IP }} <<EOF || {
          echo "::error::SSH连接测试失败"
          exit 1
        }
        echo "SSH连接成功"
        EOF

    - name: Deploy to EC2
      if: steps.ssh-setup.outcome == 'success'
      run: |
        set -ex
        echo "=== 传输更新脚本 ==="
        scp -o ConnectTimeout=15 ${{ env.UPDATE_SCRIPT }} ${{ env.SSH_USER }}@${{ env.EC2_IP }}:~/ || {
          echo "::error::脚本传输失败"
          exit 1
        }
        
        echo "=== 执行远程命令 ==="
        ssh -o ConnectTimeout=15 ${{ env.SSH_USER }}@${{ env.EC2_IP }} << 'DEPLOY_EOF'
          set -ex
          export OPENAI_API_KEY=$OPENAI_API_KEY
          
          # 安装Docker（兼容不同Linux发行版）
          if ! command -v docker &>/dev/null; then
            if grep -q 'Amazon Linux' /etc/os-release; then
              sudo yum install -y docker
            elif grep -q 'Ubuntu' /etc/os-release; then
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi
            sudo systemctl start docker
            sudo usermod -aG docker $(whoami)
          fi
          
          # 执行更新脚本
          chmod +x ~/ec2_update.sh
          sudo ~/ec2_update.sh
        DEPLOY_EOF
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
