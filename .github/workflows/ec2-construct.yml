name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get EC2 IP 
        id: get-ip
        run: |
          IP=$(terraform output -raw instance_public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1)
          echo "IP_ADDRESS=$IP" >> $GITHUB_OUTPUT
          echo "提取的IP地址: $IP"

  trigger-remote-build:
    name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install curl and jq
        run: sudo apt-get update && sudo apt-get install -y curl jq

      - name: Trigger remote workflow with curl
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          IP=${{ steps.get-ip.outputs.IP_ADDRESS }}
          COMPOSE_PATH="${{ github.event.inputs.compose-file-path }}"

          echo "准备触发工作流，使用参数:"
          echo "IP: $IP"
          echo "Compose路径: $COMPOSE_PATH"

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "host": "http://'"$IP"'",
                "compose_file": "'"$COMPOSE_PATH"'"
              }
            }' 2>&1)

          # 检查curl是否成功
          if [ $? -ne 0 ]; then
            echo "::error::API调用失败"
            echo "$RESPONSE"
            exit 1
          fi

          # 检查API响应
          ERROR_MSG=$(echo "$RESPONSE" | jq -r '.message' 2>/dev/null)
          if [ "$ERROR_MSG" != "null" ] && [ -n "$ERROR_MSG" ]; then
            echo "::error::触发失败: $ERROR_MSG"
            echo "完整响应:"
            echo "$RESPONSE" | jq .
            exit 1
          fi

          echo "工作流触发成功"
          echo "API响应:"
          echo "$RESPONSE" | jq .
