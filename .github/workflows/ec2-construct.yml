name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get and store EC2 IP 
        id: get-ip
        run: |
          # 提取IP并验证格式
          RAW_IP=$(terraform output -raw instance_public_ip)
          IP=$(echo "$RAW_IP" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1)
          
          if [[ -z "$IP" ]]; then
            echo "::error::无法提取有效IP地址，原始输出: $RAW_IP"
            exit 1
          fi
          
          # 使用最新输出语法
          echo "ip_address=$IP" >> $GITHUB_OUTPUT
          
          # 同时写入文件作为备用
          mkdir -p ip_data
          echo "$IP" > ip_data/ip.txt
          echo "提取的IP地址: $IP"

      - name: Upload IP file
        uses: actions/upload-artifact@v4
        with:
          name: ip-data
          path: ec2/ip_data/ip.txt
          retention-days: 1

  trigger-remote-build:
    name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      # ... (前面的步骤保持不变) ...

      - name: Get target workflow inputs
        id: get-inputs
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml)
          
          # 检查输入参数定义
          INPUTS=$(echo "$RESPONSE" | jq -r '.on.workflow_dispatch.inputs | to_entries[] | "\(.key)"')
          
          if [ -z "$INPUTS" ]; then
            echo "::error::目标工作流没有定义输入参数"
            echo "$RESPONSE" | jq .
            exit 1
          fi
          
          echo "目标工作流接受的输入参数:"
          echo "$INPUTS"
          echo "INPUTS_JSON=$(echo "$RESPONSE" | jq -c '.on.workflow_dispatch.inputs')" >> $GITHUB_OUTPUT

      - name: Trigger remote workflow
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          IP=${{ steps.read-ip.outputs.final_ip }}
          COMPOSE_PATH="${{ github.event.inputs.compose-file-path }}"
          
          # 从输入参数定义中获取正确的参数名
          FIRST_INPUT=$(echo '${{ steps.get-inputs.outputs.INPUTS_JSON }}' | jq -r 'keys[0]')
          SECOND_INPUT=$(echo '${{ steps.get-inputs.outputs.INPUTS_JSON }}' | jq -r 'keys[1]')
          
          echo "使用参数名: $FIRST_INPUT 和 $SECOND_INPUT"
          
          curl -X POST \
            -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "'"$FIRST_INPUT"'": "http://'"$IP"'",
                "'"$SECOND_INPUT"'": "'"$COMPOSE_PATH"'"
              }
            }'
