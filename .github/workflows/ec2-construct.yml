name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get EC2 IP 
        id: get-ip
        run: |
          # 精确提取IP并验证格式
          RAW_IP=$(terraform output -raw instance_public_ip)
          IP=$(echo "$RAW_IP" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1)
          
          if [[ -z "$IP" ]]; then
            echo "::error::无法提取有效IP地址，原始输出: $RAW_IP"
            exit 1
          fi
          
          # 使用新语法设置输出
          echo "ip_address=${IP}" >> ${GITHUB_OUTPUT}
          
          # 替代环境变量方案：直接写入文件供后续job读取
          mkdir -p ../ip_data
          echo "${IP}" > ../ip_data/ip.txt
          echo "提取的IP地址: ${IP}"

      - name: Upload IP data
        uses: actions/upload-artifact@v4
        with:
          name: ip-data
          path: ../ip_data/ip.txt
          retention-days: 1

  trigger-remote-build:
     name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Download IP data
        uses: actions/download-artifact@v4
        with:
          name: ip-data
          path: ./ip_data

      - name: Read IP address
        id: read-ip
        run: |
          IP=$(cat ./ip_data/ip.txt | tr -d '[:space:]')
          if [[ ! $IP =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
            echo "::error::无效的IP地址格式: $IP"
            exit 1
          fi
          echo "final_ip=${IP}" >> ${GITHUB_OUTPUT}
          echo "验证通过的IP地址: ${IP}"

      - name: Trigger remote workflow
        uses: actions/github-script@v6
        with:
          script: |
            const ip = `${{ steps.read-ip.outputs.final_ip }}`;
            const composePath = `${{ github.event.inputs.compose-file-path }}`;
            
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: 'QiushiZhou',
                repo: 'resumeAPI',
                workflow_id: 'build-push.yml',
                ref: 'main',
                inputs: {
                  // 根据实际目标工作流调整参数名
                  target_host: `http://${ip}`,
                  docker_compose_path: composePath
                }
              });
              console.log(`成功触发工作流，IP: ${ip}`);
            } catch (error) {
              core.setFailed(`触发失败: ${error.message}`);
              console.log('建议检查:');
              console.log('1. PAT权限是否正确');
              console.log('2. 目标工作流输入参数定义');
              console.log('3. 工作流文件路径是否正确');
            }
