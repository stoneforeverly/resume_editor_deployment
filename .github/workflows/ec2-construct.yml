name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get and store EC2 IP 
        id: get-ip
        run: |
          # 提取IP并验证格式
          RAW_IP=$(terraform output -raw instance_public_ip)
          IP=$(echo "$RAW_IP" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1)
          
          if [[ -z "$IP" ]]; then
            echo "::error::无法提取有效IP地址，原始输出: $RAW_IP"
            exit 1
          fi
          
          # 使用最新输出语法
          echo "ip_address=$IP" >> $GITHUB_OUTPUT
          
          # 同时写入文件作为备用
          mkdir -p ip_data
          echo "$IP" > ip_data/ip.txt
          echo "提取的IP地址: $IP"

      - name: Upload IP file
        uses: actions/upload-artifact@v4
        with:
          name: ip-data
          path: ec2/ip_data/ip.txt
          retention-days: 1

  trigger-remote-build:
    name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read IP from file
        id: read-ip
        run: |
          IP=$(cat ip_data/ip.txt | tr -d '[:space:]')
          if [[ ! $IP =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "::error::无效的IP地址格式: $IP"
            exit 1
          fi
          echo "final_ip=$IP" >> $GITHUB_OUTPUT
          echo "验证通过的IP地址: $IP"

      - name: Get target workflow metadata
        id: get-metadata
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          # 获取工作流文件原始内容
          WORKFLOW_CONTENT=$(curl -s -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/contents/.github/workflows/build-push.yml | jq -r .content | base64 -d)
          
          echo "目标工作流文件内容:"
          echo "$WORKFLOW_CONTENT"
          
          # 提取实际参数名
          if echo "$WORKFLOW_CONTENT" | grep -q "workflow_dispatch"; then
            echo "工作流支持workflow_dispatch"
            INPUT1=$(echo "$WORKFLOW_CONTENT" | grep -A1 "workflow_dispatch:" -A10 | grep -m1 -oP '(?<=^\s{2,4})\w+(?=:\s*$)' | head -1)
            INPUT2=$(echo "$WORKFLOW_CONTENT" | grep -A1 "workflow_dispatch:" -A10 | grep -m1 -oP '(?<=^\s{2,4})\w+(?=:\s*$)' | tail -1)
            echo "INPUT1_NAME=$INPUT1" >> $GITHUB_OUTPUT
            echo "INPUT2_NAME=$INPUT2" >> $GITHUB_OUTPUT
          else
            echo "工作流不支持workflow_dispatch，将使用repository_dispatch"
            echo "USE_REPOSITORY_DISPATCH=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger workflow
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          IP=${{ steps.read-ip.outputs.final_ip }}
          COMPOSE_PATH="${{ github.event.inputs.compose-file-path }}"
          
          if [ "${{ steps.get-metadata.outputs.USE_REPOSITORY_DISPATCH }}" = "true" ]; then
            echo "使用repository_dispatch触发"
            curl -X POST \
              -H "Authorization: token $PAT" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/QiushiZhou/resumeAPI/dispatches \
              -d '{
                "event_type": "trigger_deployment",
                "client_payload": {
                  "server_host": "http://'"$IP"'",
                  "compose_file": "'"$COMPOSE_PATH"'"
                }
              }'
          else
            echo "使用workflow_dispatch触发"
            echo "参数1: ${{ steps.get-metadata.outputs.INPUT1_NAME }}"
            echo "参数2: ${{ steps.get-metadata.outputs.INPUT2_NAME }}"
            
            curl -X POST \
              -H "Authorization: token $PAT" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml/dispatches \
              -d '{
                "ref": "main",
                "inputs": {
                  "'"${{ steps.get-metadata.outputs.INPUT1_NAME }}"'": "http://'"$IP"'",
                  "'"${{ steps.get-metadata.outputs.INPUT2_NAME }}"'": "'"$COMPOSE_PATH"'"
                }
              }'
          fi
