name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get and store EC2 IP 
        id: get-ip
        run: |
          # 提取IP并验证格式
          RAW_IP=$(terraform output -raw instance_public_ip)
          IP=$(echo "$RAW_IP" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -1)
          
          if [[ -z "$IP" ]]; then
            echo "::error::无法提取有效IP地址，原始输出: $RAW_IP"
            exit 1
          fi
          
          # 使用最新输出语法
          echo "ip_address=$IP" >> $GITHUB_OUTPUT
          
          # 同时写入文件作为备用
          mkdir -p ip_data
          echo "$IP" > ip_data/ip.txt
          echo "提取的IP地址: $IP"

      - name: Upload IP file
        uses: actions/upload-artifact@v4
        with:
          name: ip-data
          path: ec2/ip_data/ip.txt
          retention-days: 1

  trigger-remote-build:
    name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
     - name: Directly trigger workflow (绕过API检查)
       env:
        PAT: ${{ secrets.PAT }}
       run: |
        IP=${{ steps.read-ip.outputs.final_ip }}
        COMPOSE_PATH="${{ github.event.inputs.compose-file-path }}"
  
        echo "强制触发工作流(绕过API检查)，使用参数:"
        echo "VITE_SERVER_HOST: http://$IP"
        echo "DOCKER_COMPOSE_FILE: $COMPOSE_PATH"
  
        # 直接触发请求
        curl -X POST \
          -H "Authorization: token $PAT" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml/dispatches \
          -d '{
            "ref": "main",
            "inputs": {
              "VITE_SERVER_HOST": "http://'"$IP"'",
              "DOCKER_COMPOSE_FILE": "'"$COMPOSE_PATH"'"
            }
          }' && echo "触发请求已发送" || echo "触发请求失败(但可能实际已成功)"

        - name: Verify trigger result
          uses: actions/github-script@v6
          env:
            PAT: ${{ secrets.PAT_WITH_WORKFLOW_ACCESS }}
          with:
            script: |
              try {
                // 检查最近的工作流运行
                const runs = await github.rest.actions.listWorkflowRuns({
                  owner: 'QiushiZhou',
                  repo: 'resumeAPI',
                  workflow_id: 'build-push.yml',
                  per_page: 1
                });
                
                const latestRun = runs.data.workflow_runs[0];
                if (latestRun && new Date() - new Date(latestRun.created_at) < 60000) {
                  console.log(`成功触发工作流! 运行ID: ${latestRun.id}`);
                  console.log(`状态: ${latestRun.status}`);
                } else {
                  core.setFailed('未能检测到新触发的工作流运行');
                }
              } catch (error) {
                core.error('验证失败: ' + error.message);
                // 不使步骤失败，因为触发可能已成功
              }
