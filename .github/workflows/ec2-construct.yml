name: EC2 Construct 

on: 
  workflow_dispatch: 
    inputs:
      compose-file-path:
        description: "Docker Compose文件路径"
        required: true
        default: "./resumeAPI/docker-compose.yml"
  
env: 
  AWS_REGION: ap-southeast-2 
 
jobs: 
  terraform: 
    name: Apply Terraform configuration 
    runs-on: ubuntu-latest 
    defaults: 
      run: 
        working-directory: ./ec2/ 

    steps: 
      - name: Checkout terraform code 
        uses: actions/checkout@v4

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ env.AWS_REGION }} 

      - name: Terraform Init & Plan 
        run: |
          terraform init
          terraform plan 

      - name: Terraform Apply 
        if: github.ref == 'refs/heads/main' 
        run: terraform apply -auto-approve 

      - name: Get and store EC2 IP 
        id: get-ip
        run: |
          # 提取IP并验证格式
          RAW_IP=$(terraform output -raw instance_public_ip)
          IP=$(echo "$RAW_IP" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')
          
          if [[ -z "$IP" ]]; then
            echo "::error::无法提取有效IP地址，原始输出: $RAW_IP"
            exit 1
          fi
          
          # 使用新语法设置输出
          echo "ip_address=${IP}" >> ${GITHUB_OUTPUT}
          
          # 将IP写入文件供后续步骤使用
          mkdir -p ip_data
          echo "${IP}" > ip_data/ip.txt
          echo "提取的IP地址: ${IP}"

      - name: Upload IP file
        uses: actions/upload-artifact@v4
        with:
          name: ip-data
          path: ec2/ip_data/ip.txt
          retention-days: 1

  trigger-remote-build:
    name: Trigger remote repository build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Download IP file
        uses: actions/download-artifact@v4
        with:
          name: ip-data
          path: ip_data

      - name: Read IP address
        id: read-ip
        run: |
          IP=$(cat ip_data/ip.txt | tr -d '[:space:]')
          if [[ ! $IP =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
            echo "::error::无效的IP地址格式: $IP"
            exit 1
          fi
          echo "final_ip=${IP}" >> ${GITHUB_OUTPUT}
          echo "验证通过的IP地址: ${IP}"

      - name: Get target workflow inputs
        id: get-inputs
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml)
          
          # 检查输入参数定义
          INPUTS=$(echo "$RESPONSE" | jq -r '.on.workflow_dispatch.inputs // empty')
          if [ -z "$INPUTS" ]; then
            echo "NO_INPUTS=true" >> $GITHUB_OUTPUT
          else
            echo "INPUTS_JSON=$INPUTS" >> $GITHUB_OUTPUT
            echo "目标工作流输入参数:"
            echo "$INPUTS" | jq .
          fi

      - name: Trigger remote workflow
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          IP=${{ steps.read-ip.outputs.final_ip }}
          COMPOSE_PATH="${{ github.event.inputs.compose-file-path }}"
          
          # 默认参数名（根据实际情况调整）
          PARAMS='{
            "ref": "main",
            "inputs": {
              "server_host": "http://'"$IP"'",
              "docker_compose_path": "'"$COMPOSE_PATH"'"
            }
          }'
          
          # 如果有自定义参数定义
          if [ "${{ steps.get-inputs.outputs.NO_INPUTS }}" != "true" ]; then
            PARAMS='{
              "ref": "main",
              "inputs": {
                "VITE_SERVER_HOST": "http://'"$IP"'",
                "DOCKER_COMPOSE_FILE": "'"$COMPOSE_PATH"'"
              }
            }'
          fi
          
          echo "触发参数: $PARAMS"
          
          curl -X POST \
            -H "Authorization: token $PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/QiushiZhou/resumeAPI/actions/workflows/build-push.yml/dispatches \
            -d "$PARAMS"
